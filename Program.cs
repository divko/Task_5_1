using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Task_5
{
    internal class Program
    {
        //static string[] SplitText(string text)
        //{

        //    return string[]; 
        //}
        static void PrintText(String[] Arr)
        {
            foreach (var e in Arr)
                Console.WriteLine($"{e} ");


        }
        static void Pause()
        { Console.ReadKey(); }
        static void Main(string[] args)
        {
            #region Задание 1.Метод разделения строки на слова

            //            Что нужно сделать
            //Пользователь вводит в консольном приложении длинное предложение. Каждое слово в этом предложении отделено пробелом.
            //Создайте метод, который в качестве входного параметра принимает строковую переменную,
            //а в качестве возвращаемого значения — массив слов.
            //После вызова этого метода программа вызывает второй метод,
            //который выводит каждое слово в отдельной строке. Метод должен выглядеть так: static string[] SplitText(string text),
            //где text — это строка, которую необходимо разделить.

            //Советы и рекомендации
            //Для реализации этой программы можно написать алгоритм разделения на слова самостоятельно, используя цикл.
            //Также можете использовать метод string.Split(‘ ’);. Подробнее о нём говорится на странице документации Microsoft.
            //Для названия методов используйте CamelCase, когда каждое следующее слово начинается с заглавной буквы.
            //Например, метод с именем GetPositiveRandomInt возвращает положительное целое случайное число.По такому же принципу следует называть и свои методы.
            //В программе не должно быть глобальных переменных.Все данные между методами должны передаваться через параметры и возвращаемые значения.
            //Что оценивается
            //В программе, помимо основного метода main, присутствует два других метода, которые вызываются в теле метода main.
            //Названия методов соответствуют тому, что они делают: разделяют или выводят данные.

            Console.WriteLine("Введите предложение, каждое слово отделяйте пробелом. В результате ожидается вывод каждого слова в отдельной строке");

            String text = Console.ReadLine();

            // Передать строку, получить массив слов


            string[] arr = { "Привет","Пока" };


            // SplitText(text,string []);

            PrintText(arr);

            Pause();




            #endregion

            #region Задание 2.Перестановка слов в предложении

            //Что нужно сделать
            //Пользователь вводит в программе длинное предложение.
            //Каждое слово отделено пробелом. После ввода пользователь нажимает клавишу Enter. Необходимо создать два метода:

            //первый разделяет слова в предложении;
            //            второй меняет эти слова местами(в обратной последовательности).
            //            Учтите, что один метод вызывается внутри другого метода, то есть в методе main вызывается метод c сигнатурой ReversWords(string inputPhrase).
            //            Внутри этого метода вызывается метод по разделению входной фразы на слова.
            //            Метод должен выглядеть так: static string Reverse(string text), где text — это предложение, в котором необходимо поменять местами слова.

            //Советы и рекомендации
            //Для сложения строк можно использовать конкатенацию строк.
            //Выражение вида ResultString += NewString + “ ” добавит к текущей строке, которая представлена переменной ResultString,
            //новую строку из переменной NewString, а также пробел к концу строки. 
            //Для реализации алгоритма разделения строки на слова можно воспользоваться рекомендациями из задания 1.
            //В программе не должно быть глобальных переменных.Все данные между методами должны передаваться через параметры и возвращаемые значения.
            //Часто спрашивают
            //Что такое параметры методов?

            //Параметры метода — это то, что мы передаём внутрь метода для дальнейшей обработки.
            //Например, если мы хотим, чтобы наш метод вычислял площадь квадрата, мы передадим в метод параметр — сторону квадрата.
            //Параметры задаются в скобках в виде(типПараметра имяПеременнойПараметра), например, говоря о площади квадрата void Square(int sideLength).
            //Вызываться такой метод будет как Square(5), где 5 — длина стороны квадрата, переданная нами внутрь метода как параметр. Подробнее — в статье «Параметры методов».

            //Что такое возвращаемое значение?

            //Это результат работы метода. Например, метод, считающий площадь квадрата, должен вернуть число — искомую площадь квадрата.
            //Возвращается значение через оператор return.Подробнее — в статье «Возвращение значения и оператор return».

            //Что оценивается
            //Вызов метода по разделению на слова происходит внутри метода, который отвечает непосредственно за инвертирование слов в предложении.


            #endregion



        }
    }
}
